{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/ankurakke/personal/assignment/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject;import React,{useEffect,useState}from'react';import styled from'styled-components';import{useTable,useGroupBy,useExpanded,useSortBy}from'react-table';import mockData from'./mockData';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const Styles=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  padding: 1rem;\\n\\n  table {\\n    border-spacing: 0;\\n    border: 1px solid black;\\n\\n    tr {\\n      :last-child {\\n        td {\\n          border-bottom: 0;\\n        }\\n      }\\n    }\\n\\n    th,\\n    td {\\n      margin: 0;\\n      padding: 0.5rem;\\n      border-bottom: 1px solid black;\\n      border-right: 1px solid black;\\n\\n      :last-child {\\n        border-right: 0;\\n      }\\n    }\\n  }\\n\"])));function Table(_ref){let{columns,data}=_ref;const sortees=React.useMemo(()=>[{id:\"price\",desc:true}],[]);const{getTableProps,getTableBodyProps,headerGroups,rows,setGroupBy,prepareRow,state:{groupBy,expanded}}=useTable({columns,data,initialState:{sortBy:sortees}},useGroupBy,useSortBy,useExpanded// useGroupBy would be pretty useless without useExpanded ;)\n);// We don't want to render all of the rows for this example, so cap\n// it at 100 for this use case\nconst firstPageRows=rows.slice(0,100);const getLeafColumns=function(rootColumns){return rootColumns.reduce((leafColumns,column)=>{if(column.columns){return[...leafColumns,...getLeafColumns(column.columns)];}else{return[...leafColumns,column];}},[]);};useEffect(()=>{setGroupBy(['category']);},[]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"table\",{...getTableProps(),children:[/*#__PURE__*/_jsx(\"thead\",{children:headerGroups.map(headerGroup=>/*#__PURE__*/_jsx(\"tr\",{...headerGroup.getHeaderGroupProps(),children:headerGroup.headers.map(column=>/*#__PURE__*/_jsx(\"th\",{...column.getHeaderProps(),children:column.render('Header')}))}))}),/*#__PURE__*/_jsx(\"tbody\",{...getTableBodyProps(),children:firstPageRows.map((row,i)=>{prepareRow(row);return/*#__PURE__*/_jsx(\"tr\",{...row.getRowProps(),children:row.cells.map(cell=>{return/*#__PURE__*/_jsx(\"td\",{...cell.getCellProps(),style:{background:cell.isGrouped?'#0aff0082':cell.isAggregated?'#ffa50078':cell.isPlaceholder?'#ff000042':'white'},children:cell.isGrouped?/*#__PURE__*/ // If it's a grouped cell, add an expander and row count\n_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"span\",{...row.getToggleRowExpandedProps(),children:row.isExpanded?'ðŸ‘‡':'ðŸ‘‰'}),' ',cell.render('Cell'),\" (\",row.subRows.length,\")\"]}):cell.isAggregated?// If the cell is aggregated, use the Aggregated\n// renderer for cell\ncell.render('Aggregated'):cell.isPlaceholder?null:// For cells with repeated values, render null\n// Otherwise, just render the regular cell\ncell.render('Cell')});})});})})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"div\",{children:[\"Showing the first \",rows.length,\" results of \",rows.length,\" rows\"]})]});}function App(){const saveSession=()=>{sessionStorage.setItem('userData',JSON.stringify(data));};const resetSession=()=>{sessionStorage.setItem('userData',JSON.stringify(mockData(9)));setData(getSession());};const getSession=()=>{let kdata=sessionStorage.getItem('userData');if(kdata==null)return null;return JSON.parse(kdata);};useEffect(()=>{let kdata=sessionStorage.getItem('userData');if(kdata==null){resetSession();}setData(getSession());},[]);const[data,setData]=useState([]);// useEffect(()=>{\n//   console.log(sessionStorage.getItem('userData'));\n// },[]);\nconst updatePrice=(row,value)=>{setData(prevData=>{const tempData=[...prevData];tempData.find(e=>e.id===row.id).price=value;return tempData;});};const columns=React.useMemo(()=>[{Header:'Table 1',columns:[{Header:'id',accessor:'id'},{Header:'image',accessor:'image'},{Header:'name',accessor:'name'// Use a two-stage aggregator here to first\n// count the total rows being aggregated,\n// then sum any of those counts if they are\n// aggregated further\n},{Header:'category',accessor:'category'// Use another two-stage aggregator here to\n// first count the UNIQUE values from the rows\n// being aggregated, then sum those counts if\n// they are aggregated further\n},{Header:'price',accessor:row=>/*#__PURE__*/_jsx(\"input\",{type:'number',value:row.price,onChange:e=>updatePrice(row,e.target.value)}),// sorted:true,\n// editable:true,\nsortType:(rowA,rowB,id,desc)=>{if(rowA.values[id]==null)return 0;if(rowB.values[id]==null)return 0;let a=Number.parseFloat(rowA.values[id].props.value);let b=Number.parseFloat(rowB.values[id].props.value);if(Number.isNaN(a)){// Blanks and non-numeric strings to bottom\na=desc?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY;}if(Number.isNaN(b)){b=desc?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY;}if(a>b)return 1;if(a<b)return-1;return 0;}// Aggregate the average age of visitors\n},{Header:'label',accessor:'label'// Aggregate the sum of all visits\n},{Header:'description',accessor:'description'}]}],[]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>saveSession(),children:\" Save\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>resetSession(),children:\"Reset\"}),data.length>0&&/*#__PURE__*/_jsx(Styles,{children:/*#__PURE__*/_jsx(Table,{columns:columns,data:data})})]});}export default App;","map":{"version":3,"names":["React","useEffect","useState","styled","useTable","useGroupBy","useExpanded","useSortBy","mockData","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","Styles","div","_templateObject","_taggedTemplateLiteral","Table","_ref","columns","data","sortees","useMemo","id","desc","getTableProps","getTableBodyProps","headerGroups","rows","setGroupBy","prepareRow","state","groupBy","expanded","initialState","sortBy","firstPageRows","slice","getLeafColumns","rootColumns","reduce","leafColumns","column","children","map","headerGroup","getHeaderGroupProps","headers","getHeaderProps","render","row","i","getRowProps","cells","cell","getCellProps","style","background","isGrouped","isAggregated","isPlaceholder","getToggleRowExpandedProps","isExpanded","subRows","length","App","saveSession","sessionStorage","setItem","JSON","stringify","resetSession","setData","getSession","kdata","getItem","parse","updatePrice","value","prevData","tempData","find","e","price","Header","accessor","type","onChange","target","sortType","rowA","rowB","values","a","Number","parseFloat","props","b","isNaN","NEGATIVE_INFINITY","POSITIVE_INFINITY","onClick"],"sources":["/Users/ankurakke/personal/assignment/src/App.js"],"sourcesContent":["import React, { useEffect,useState } from 'react'\nimport styled from 'styled-components'\nimport { useTable, useGroupBy, useExpanded, useSortBy } from 'react-table'\n\nimport mockData from './mockData'\n\nconst Styles = styled.div`\n  padding: 1rem;\n\n  table {\n    border-spacing: 0;\n    border: 1px solid black;\n\n    tr {\n      :last-child {\n        td {\n          border-bottom: 0;\n        }\n      }\n    }\n\n    th,\n    td {\n      margin: 0;\n      padding: 0.5rem;\n      border-bottom: 1px solid black;\n      border-right: 1px solid black;\n\n      :last-child {\n        border-right: 0;\n      }\n    }\n  }\n`\n\nfunction Table({ columns, data }) {\n  const sortees = React.useMemo(\n    () => [\n      {\n        id: \"price\",\n        desc: true\n      }\n    ],\n    []\n  );\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    setGroupBy,\n    prepareRow,\n    state: { groupBy, expanded },\n  } = useTable(\n    {\n      columns,\n      data,\n      initialState: {\n        sortBy: sortees,\n      }\n    },\n    useGroupBy,\n    useSortBy,\n    useExpanded // useGroupBy would be pretty useless without useExpanded ;)\n  )\n\n  // We don't want to render all of the rows for this example, so cap\n  // it at 100 for this use case\n  const firstPageRows = rows.slice(0, 100);\n\n  const getLeafColumns = function (rootColumns) {\n    return rootColumns.reduce((leafColumns, column)=>{\n        if (column.columns) {\n            return [...leafColumns, ...getLeafColumns(column.columns)];\n        } else {\n            return [...leafColumns, column];\n        }\n    }, []);\n  }\n\n  useEffect(()=>{\n    setGroupBy(['category']);\n  },[])\n\n  return (\n    <>\n      {/* <pre>\n        <code>{JSON.stringify({ groupBy, expanded }, null, 2)}</code>\n      </pre>\n      Group By:\n      <select\n        value={'category'}\n        onChange={e => {\n          setGroupBy([e.target.value]);\n        }}\n      >\n        <option value=\"\">None</option>\n        {getLeafColumns(columns).map(column => (\n          <option key={column.accessor} value={column.accessor}>{column.Header}</option>\n        ))}\n      </select> */}\n      \n      <table {...getTableProps()}>\n        <thead>\n          {headerGroups.map(headerGroup => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map(column => (\n                <th {...column.getHeaderProps()}>\n                  {/* {column.canGroupBy ? (\n                    // If the column can be grouped, let's add a toggle\n                    <span {...column.getGroupByToggleProps()}>\n                      {column.isGrouped ? 'ðŸ›‘ ' : 'ðŸ‘Š '}\n                    </span>\n                  ) : null} */}\n                  {column.render('Header')}\n                </th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {firstPageRows.map((row, i) => {\n            prepareRow(row)\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map(cell => {\n                  return (\n                    <td\n                      // For educational purposes, let's color the\n                      // cell depending on what type it is given\n                      // from the useGroupBy hook\n                      {...cell.getCellProps()}\n                      style={{\n                        background: cell.isGrouped\n                          ? '#0aff0082'\n                          : cell.isAggregated\n                          ? '#ffa50078'\n                          : cell.isPlaceholder\n                          ? '#ff000042'\n                          : 'white',\n                      }}\n                    >\n                      {cell.isGrouped ? (\n                        // If it's a grouped cell, add an expander and row count\n                        <>\n                          <span {...row.getToggleRowExpandedProps()}>\n                            {row.isExpanded ? 'ðŸ‘‡' : 'ðŸ‘‰'}\n                          </span>{' '}\n                          {cell.render('Cell')} ({row.subRows.length})\n                        </>\n                      ) : cell.isAggregated ? (\n                        // If the cell is aggregated, use the Aggregated\n                        // renderer for cell\n                        cell.render('Aggregated')\n                      ) : cell.isPlaceholder ? null : ( // For cells with repeated values, render null\n                        // Otherwise, just render the regular cell\n                        cell.render('Cell')\n                      )}\n                    </td>\n                  )\n                })}\n              </tr>\n            )\n          })}\n        </tbody>\n      </table>\n      <br />\n      <div>Showing the first {rows.length} results of {rows.length} rows</div>\n    </>\n  )\n}\n\n\nfunction App() {\n\n  const saveSession = ()=>{\n    sessionStorage.setItem('userData', JSON.stringify(data));\n  }\n\n  const resetSession = ()=>{\n    sessionStorage.setItem('userData', JSON.stringify(mockData(9)));\n    setData(getSession());\n\n  }\n\n  const getSession = () => {\n    let kdata = sessionStorage.getItem('userData');\n    if(kdata == null )\n      return null;\n    return JSON.parse(kdata);\n  }\n\n  useEffect(()=>{\n    let kdata = sessionStorage.getItem('userData');\n    if(kdata==null){\n      resetSession();\n    }\n    \n    setData(getSession());\n    \n  },[]);\n\n  const [data,setData] = useState([]);\n\n  // useEffect(()=>{\n  //   console.log(sessionStorage.getItem('userData'));\n\n  // },[]);\n\n  const updatePrice = (row,value) => {\n    \n    setData(prevData => {\n      const tempData = [...prevData];\n      tempData.find(e => e.id === row.id).price = value;\n      return tempData;\n    });\n  }\n  \n  const columns = React.useMemo(\n    () => [\n      {\n        Header: 'Table 1',\n        columns: [\n          {\n            Header: 'id',\n            accessor: 'id',\n          },\n          {\n            Header: 'image',\n            accessor: 'image',\n          },\n          {\n            Header: 'name',\n            accessor: 'name',\n            // Use a two-stage aggregator here to first\n            // count the total rows being aggregated,\n            // then sum any of those counts if they are\n            // aggregated further\n          },\n          {\n            Header: 'category',\n            accessor: 'category',\n            // Use another two-stage aggregator here to\n            // first count the UNIQUE values from the rows\n            // being aggregated, then sum those counts if\n            // they are aggregated further\n          },\n          {\n            Header: 'price',\n            accessor: row => <input type={'number'} value={row.price} onChange={(e)=>updatePrice(row,e.target.value)}></input>,\n            // sorted:true,\n            // editable:true,\n            sortType:(rowA,rowB,id,desc)=>{\n              if(rowA.values[id]==null)\n                return 0;\n              if(rowB.values[id]==null)\n                return 0;\n              let a = Number.parseFloat(rowA.values[id].props.value);\n              let b = Number.parseFloat(rowB.values[id].props.value);\n              if (Number.isNaN(a)) {  // Blanks and non-numeric strings to bottom\n                  a = desc ? Number.NEGATIVE_INFINITY : Number.POSITIVE_INFINITY;\n              }\n              if (Number.isNaN(b)) {\n                  b = desc ? Number.NEGATIVE_INFINITY : Number.POSITIVE_INFINITY;\n              }\n              if (a > b) return 1; \n              if (a < b) return -1;\n              return 0;\n            }\n            // Aggregate the average age of visitors\n          },\n          {\n            Header: 'label',\n            accessor: 'label',\n            // Aggregate the sum of all visits\n          },\n          {\n            Header: 'description',\n            accessor: 'description',\n          },\n        ],\n      },\n    ],\n    []\n  )\n\n\n  return (\n    <>\n    <button onClick={()=>saveSession()}> Save</button>\n    <button onClick={()=>resetSession()} >Reset</button>\n    {data.length>0 && <Styles>\n      <Table columns={columns} data={data} />\n    </Styles>}</>\n  )\n}\n\nexport default App\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}